/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.smart.struts.action;

import java.sql.SQLException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.smart.struts.dao.SecurityDAO;
import com.smart.struts.form.RegisterForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-17-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ChangeQuestionAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws SQLException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException {
		// TODO Auto-generated method stub
		String target="Changequestion.jsp?status=Change Failed"; 
		  
		  		RegisterForm rb=new RegisterForm();
		        rb.setLoginname(request.getParameter("loginname"));
		        rb.setPassword(request.getParameter("password"));
		        rb.setSecretAnswer(request.getParameter("secretqans"));
		        int squestid=0;
		        
		         if(request.getParameter("ch")!=null)
		        {
		            rb.setSecretQuestionID(squestid);
		            rb.setOwnSecretQuestion(request.getParameter("ownsecretq"));
		        }
		        else
		        {
		            squestid=Integer.parseInt(request.getParameter("secretqid"));
		            rb.setSecretQuestionID(squestid);
		            rb.setOwnSecretQuestion("Not Mentioned");
		        }
		        //String ownsquest=request.getParameter("ownquest");
		        String sanswer=request.getParameter("secretqans");
		        
		        
		        boolean flag=new SecurityDAO().changeQuestion(rb);
		        HttpSession session=request.getSession();
		        String pathstring="failure";
		        if(((String)session.getAttribute("role")).equals("admin"))
		          pathstring="admin";
		        else if(((String)session.getAttribute("role")).equals("emp"))
		          pathstring="emp";
		        else
		        	pathstring="user";
		        
		        if(flag) 
		           return mapping.findForward(pathstring);
		        else  
		            return mapping.findForward(pathstring); 
		      
		          
	}
}