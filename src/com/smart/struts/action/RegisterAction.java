/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.smart.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.smart.struts.dao.ProfileDAO;
import com.smart.struts.form.RegisterForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-07-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class RegisterAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		RegisterForm rb=(RegisterForm)form;
		int questid=0; 
		
		boolean flag=false;
		try{
			 
	       
	        rb.setFirstLogin(0); 
	                
	        rb.setFirstName(request.getParameter("firstname"));
	        rb.setLastName(request.getParameter("lastname"));
	        System.out.println(request.getParameter("diff"));
	        /*if(request.getParameter("diff").equalsIgnoreCase("user"))
	        {
	        	rb.setStatus(0);
	        }
	        else
	        	rb.setStatus(1);*/
	        rb.setLoginType(request.getParameter("diff")); 
	        rb.setPassword(request.getParameter("password")); 
	        rb.setStatus(1);
	        if(request.getParameter("ch")!=null) 
	        { 
	            rb.setSecretQuestionID(questid); 
	            rb.setOwnSecretQuestion(request.getParameter("ownquest")); 
	        } 
	        else 
	        { 
	            questid=Integer.parseInt(request.getParameter("squest")); 
	            rb.setSecretQuestionID(questid); 
	            rb.setOwnSecretQuestion("Not Mentioned"); 
	        } 
	        rb.setSecretAnswer(request.getParameter("sanswer")); 
	        rb.setLocale(request.getLocale().toString()); 
	        flag=new ProfileDAO().registration(rb);
			}catch(Exception e){e.printStackTrace();}
	        if(flag) 
	           return mapping.findForward("success");
	        else  
	            return mapping.findForward("failure");
		}
	}
	        
	
