/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.smart.struts.action;

import java.sql.SQLException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.smart.struts.dao.SecurityDAO;
import com.smart.struts.form.RegisterForm;

/** 
 * MyEclipse Struts
 * Creation date: 08-18-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/RecoverPassword.jsp"
 * @struts.action-forward name="failure" path="/RecoverPassword.jdp"
 */
public class RecoverPasswordAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws SQLException 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException {
		// TODO Auto-generated method stub
		RegisterForm rb=new RegisterForm();
        int squestid=0;
        String password="";
        String responsekey="";
       // rb.setLoginname(request.getParameter("loginname"));
        //rb.setSecretAnswer(request.getParameter("secretqans"));
        System.out.println();
         if(request.getParameter("ch")!=null)
        {
            rb.setSecretQuestionID(squestid);
            rb.setOwnSecretQuestion(request.getParameter("ownsecretq"));
            password=new SecurityDAO().recoverPasswordByOWNQuestion(rb);
        }
        else
        {
            squestid=Integer.parseInt(request.getParameter("secretqid"));
            rb.setSecretQuestionID(squestid);
            rb.setOwnSecretQuestion("Not Mentioned");
            password=new SecurityDAO().recoverPasswordByExistQuestion(rb);
        }
        if(password.equals("") || password==null)
        {
             return mapping.findForward("success");
        }     
        else
        	return mapping.findForward("failure");
         
	}
}